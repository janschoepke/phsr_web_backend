<?php
/**
 * Created by PhpStorm.
 * User: janschopke
 * Date: 15.08.17
 * Time: 09:37
 */

namespace src\services;


use DB\CampaignResult;
use DB\CampaignResultQuery;
use DB\MalwareCampaign;
use DB\MalwareCampaignQuery;
use DB\UserMalwareCampaignsQuery;
use DB\UserQuery;

class MalwareService
{
    function getUserCampaigns ($userMail, $raw = false) {
        $currentUser = UserQuery::create()->filterByEmail($userMail)->findOne();
        if(!is_null($currentUser)) {
            $userCampaigns = MalwareCampaignQuery::create()->filterByUser($currentUser)->find()->toArray();
            $results = [];
            foreach($userCampaigns as $userCampaign) {
                $resultData = CampaignResultQuery::create()->filterByCampaignId($userCampaign['Id'])->find()->toArray();
                $userCampaign['resultData'] = $resultData;
                array_push($results, $userCampaign);
            }
            if (!$raw) {
                return json_encode($results);
            }
            return $results;
        } else {
            throw new \ApplicationException("There is no such email address.");
            return false;
        }
    }

    function getCampaign ($userMail, $campaignID) {
        $currentUser = UserQuery::create()->filterByEmail($userMail)->findOne();
        if(!is_null($currentUser)) {
            $currentCampaign = MalwareCampaignQuery::create()->filterById($campaignID)->filterByUser($currentUser)->findOne();
            if(!is_null($currentCampaign)) {
                return $currentCampaign->toJSON();
            } else {
                throw new \ApplicationException("There is no malware campaign with this id.");
                return false;
            }
        } else {
            throw new \ApplicationException("There is no such email address.");
            return false;
        }
    }

    function addCampaign ($userMail, $name, $description) {
        $currentUser = UserQuery::create()->filterByEmail($userMail)->findOne();
        if(!is_null($currentUser)) {
            $malwareCampaign = new MalwareCampaign();
            $malwareCampaign->setCampaignName($name);
            $malwareCampaign->setCampaignDescription($description);

            $tokenService = new TokenService();
            $uuid = $tokenService->generateUuid();

            $malwareCampaign->setCampaignRandomId($uuid);

            $malwareCampaign->addUser($currentUser);
            $malwareCampaign->save();
            return true;
        } else {
            throw new \ApplicationException("There is no such email address.");
            return false;
        }
    }

    function editCampaign ($userMail, $campaignID, $name, $description) {
        $currentUser = UserQuery::create()->filterByEmail($userMail)->findOne();
        if(!is_null($currentUser)) {
            $currentCampaign = MalwareCampaignQuery::create()->filterById($campaignID)->filterByUser($currentUser)->findOne();
            if(!is_null($currentCampaign)) {
                $currentCampaign->setCampaignName($name);
                $currentCampaign->setCampaignDescription($description);
                $currentCampaign->save();
                return true;
            } else {
                throw new \ApplicationException("There is no campaign with this id.");
                return false;
            }
        } else {
            throw new \ApplicationException("There is no such email address.");
            return false;
        }
    }

    function deleteCampaign ($userMail, $campaignID) {
        $currentUser = UserQuery::create()->filterByEmail($userMail)->findOne();
        if(!is_null($currentUser)) {
            $currentCampaign = MalwareCampaignQuery::create()->filterById($campaignID)->filterByUser($currentUser)->findOne();
            if(!is_null($currentCampaign)) {
                CampaignResultQuery::create()->filterByCampaignId($currentCampaign->getId())->delete();
                UserMalwareCampaignsQuery::create()->filterByCampaignId($currentCampaign->getId())->delete();
                $currentCampaign->delete();
                return true;
            } else {
                throw new \ApplicationException("There is no campaign with this id.");
                return false;
            }
        } else {
            throw new \ApplicationException("There is no such email address.");
            return false;
        }
    }

    function addCampaignResult ($randomId, $timestamp, $computerName, $userName, $internalIp, $externalIp, $osVersion) {
        $currentCampaign = MalwareCampaignQuery::create()->filterByCampaignRandomId($randomId)->findOne();
        if(!is_null($currentCampaign)) {
            $campaignResult = new CampaignResult();
            $campaignResult->setTimestamp($timestamp);
            $campaignResult->setComputerName($computerName);
            $campaignResult->setUserName($userName);
            $campaignResult->setInternalIp($internalIp);
            $campaignResult->setExternalIp($externalIp);
            $campaignResult->setOsVersion($osVersion);
            $campaignResult->setCampaignId($currentCampaign->getId());
            $campaignResult->save();
            return true;
        } else {
            throw new \ApplicationException("There is no such campaign.");
            return false;
        }
    }

    function getMalwareStatistics($userMail) {
        $currentUser = UserQuery::create()->filterByEmail($userMail)->findOne();
        if(!is_null($currentUser)) {
            return MalwareCampaignQuery::create()->joinCampaignResult()->joinUserMalwareCampaigns()->filterByUser($currentUser)->find()->toArray();
        } else {
            throw new \ApplicationException("There is no such email address.");
            return false;
        }
    }
}
